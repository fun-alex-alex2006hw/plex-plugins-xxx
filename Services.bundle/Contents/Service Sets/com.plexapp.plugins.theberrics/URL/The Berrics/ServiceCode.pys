PHOTO_URL = 'http://img.theberrics.com/i.php?src=/video/stills/%s'
VIDEO_DETAILS_URL = 'http://theberrics.com/media/json_file_request/%s'

####################################################################################################
def MetadataObjectForURL(url):

	try:
		page = HTML.ElementFromURL(url)
	except:
		raise Ex.MediaNotAvailable

	# Extract the configuration of the player, to determine the id of the associated content
	id = page.xpath('//div[@data-media-file-id]/@data-media-file-id')

	if len(id) < 1:
		raise Ex.MediaNotAvailable

	# Get a description from the main page.
	description = page.xpath("//div[@class='text-item']/text()")
	if len(description) < 1:
		summary = None
	else:
		summary = description[0].strip()

	# Obtain the details associated with the video.
	details = JSON.ObjectFromURL(VIDEO_DETAILS_URL % id[0])
	title = details['name']
	thumb = PHOTO_URL % details['file_video_still']
	date = Datetime.ParseDate(details['created'])

	return VideoClipObject(
		title = title,
		summary = summary,
		thumb = thumb,
		originally_available_at = date
	)

####################################################################################################
def MediaObjectsForURL(url):

	return [
		MediaObject(
			container = Container.MP4,
			video_codec = VideoCodec.H264,
			audio_codec = AudioCodec.AAC,
			video_resolution = 'sd',
			audio_channels = 2,
			parts = [PartObject(key=Callback(PlayVideo, url=url))]
		)
	]

####################################################################################################
@indirect
def PlayVideo(url, **kwargs):

	try:
		page = HTML.ElementFromURL(url)
	except:
		raise Ex.MediaExpired

	id = page.xpath('//div[@data-media-file-id]/@data-media-file-id')

	if len(id) < 1:
		raise Ex.MediaNotAvailable

	# Obtain the details associated with the video and return a redirect to the actual video.
	details = JSON.ObjectFromURL(VIDEO_DETAILS_URL % id[0])

	return IndirectResponse(VideoClipObject, key=details['brightcove_url'])
